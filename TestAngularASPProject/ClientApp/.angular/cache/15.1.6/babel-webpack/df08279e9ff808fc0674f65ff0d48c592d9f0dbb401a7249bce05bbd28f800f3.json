{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\n//import { HomeComponent } from './home/home.component';\n//import { CounterComponent } from './counter/counter.component';\n//import { FetchDataComponent } from './fetch-data/fetch-data.component';\n//import { MyComponent } from './my-component/my-component.component';\n/**\n * @NgModule decorator:\n * There are several fields that can be used to configure and customize\n * the behavior of a module. The fields in this decorator provide control over\n * services, components and other features used in this decorator.\n */\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  /**\n   * declarations\n   * Used to declare components, directives and pipes that belong to the module.\n   * These declarations make items available for use within the module.\n   */\n  declarations: [AppComponent, NavMenuComponent, HomeComponent, CounterComponent, FetchDataComponent, MyComponent],\n  /**\n   * imports\n   * Specifies other modules who's exported components, directives, or services\n   * are required by components in this module.\n   */\n  imports: [BrowserModule.withServerTransition({\n    appId: 'ng-cli-universal'\n  }), HttpClientModule, FormsModule,\n  /**\n   * Route definitions for our Angular Client App.\n   */\n  RouterModule.forRoot([\n    //{ path: '', component: HomeComponent, pathMatch: 'full' },\n    //{ path: 'counter', component: CounterComponent },\n    //{ path: 'fetch-data', component: FetchDataComponent },\n    // my newly added route, it maps to component: MyComponent\n    //{ path: 'my-component', component: MyComponent }\n  ])],\n  /**\n   * providers\n   * Used to configure the dependency injection system with a list of services\n   * that the module should provide. These services are made available throughout\n   * the application.\n   */\n  providers: [],\n  /**\n   * bootstrap\n   * Field is used to specify the root components that should be bootstrapped when\n   * the module is loaded. The root component typically corresponds to the main\n   * component of the application.\n   */\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"mappings":";AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE;AACA;AACA;AACA;AAEA;;;;;;AAuDO,IAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,eAjDrBN,QAAQ,CAAC;EACR;;;;;EAKAO,YAAY,EAAE,CACZH,YAAY,EACZC,gBAAgB,EAChBG,aAAa,EACbC,gBAAgB,EAChBC,kBAAkB,EAClBC,WAAW,CACZ;EACD;;;;;EAKAC,OAAO,EAAE,CACPb,aAAa,CAACc,oBAAoB,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAE,CAAC,EACjEZ,gBAAgB,EAChBD,WAAW;EACX;;;EAGAE,YAAY,CAACY,OAAO,CAAC;IACnB;IACA;IACA;IACA;IACA;EAAA,CACD,CAAC,CACH;EACD;;;;;;EAMAC,SAAS,EAAE,EAAE;EACb;;;;;;EAMAC,SAAS,EAAE,CAACb,YAAY;CACzB,CAAC,GACWE,SAAS,CAAI;SAAbA,SAAS","names":["BrowserModule","NgModule","FormsModule","HttpClientModule","RouterModule","AppComponent","NavMenuComponent","AppModule","declarations","HomeComponent","CounterComponent","FetchDataComponent","MyComponent","imports","withServerTransition","appId","forRoot","providers","bootstrap"],"sourceRoot":"","sources":["/Users/bitstop/Projects/TestAngularASPProject/TestAngularASPProject/ClientApp/src/app/app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\n//import { HomeComponent } from './home/home.component';\n//import { CounterComponent } from './counter/counter.component';\n//import { FetchDataComponent } from './fetch-data/fetch-data.component';\n//import { MyComponent } from './my-component/my-component.component';\n\n/**\n * @NgModule decorator:\n * There are several fields that can be used to configure and customize\n * the behavior of a module. The fields in this decorator provide control over\n * services, components and other features used in this decorator.\n */\n@NgModule({\n  /**\n   * declarations\n   * Used to declare components, directives and pipes that belong to the module.\n   * These declarations make items available for use within the module.\n   */\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    CounterComponent,\n    FetchDataComponent,\n    MyComponent,\n  ],\n  /**\n   * imports\n   * Specifies other modules who's exported components, directives, or services\n   * are required by components in this module.\n   */\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    /**\n     * Route definitions for our Angular Client App.\n     */\n    RouterModule.forRoot([\n      //{ path: '', component: HomeComponent, pathMatch: 'full' },\n      //{ path: 'counter', component: CounterComponent },\n      //{ path: 'fetch-data', component: FetchDataComponent },\n      // my newly added route, it maps to component: MyComponent\n      //{ path: 'my-component', component: MyComponent }\n    ])\n  ],\n  /**\n   * providers\n   * Used to configure the dependency injection system with a list of services\n   * that the module should provide. These services are made available throughout\n   * the application.\n   */\n  providers: [],\n  /**\n   * bootstrap\n   * Field is used to specify the root components that should be bootstrapped when\n   * the module is loaded. The root component typically corresponds to the main\n   * component of the application.\n   */\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}