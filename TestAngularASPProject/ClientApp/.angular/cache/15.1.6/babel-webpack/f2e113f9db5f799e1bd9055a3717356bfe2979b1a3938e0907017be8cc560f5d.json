{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { SearchFlightsComponent } from './search-flights/search-flights.component';\nimport { HomeComponent } from './home/home.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\n//import { CounterComponent } from './counter/counter.component';\n//import { FetchDataComponent } from './fetch-data/fetch-data.component';\n//import { MyComponent } from './my-component/my-component.component';\n/**\n * @NgModule decorator:\n * There are several fields that can be used to configure and customize\n * the behavior of a module. The fields in this decorator provide control over\n * services, components and other features used in this decorator.\n */\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule.withServerTransition({\n    appId: 'ng-cli-universal'\n  }), HttpClientModule, FormsModule,\n  /**\n   * Route definitions for our Angular Client App.\n   */\n  RouterModule.forRoot([{\n    path: '',\n    component: SearchFlightsComponent,\n    pathMatch: 'full'\n  }, {\n    path: '/notes',\n    component: HomeComponent\n  }\n  //{ path: 'counter', component: CounterComponent },\n  //{ path: 'fetch-data', component: FetchDataComponent },\n  // my newly added route, it maps to component: MyComponent\n  //{ path: 'my-component', component: MyComponent }\n  ])]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, NavMenuComponent, SearchFlightsComponent],\n    imports: [i1.BrowserModule, HttpClientModule, FormsModule, i2.RouterModule]\n  });\n})();","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,sBAAsB,QAAQ,2CAA2C;AAClF,SAASC,aAAa,QAAQ,uBAAuB;;;;AACrD;AACA;AACA;AAEA;;;;;;AAyDA,OAAM,MAAOC,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRL,YAAY;AAAA;AAEbI,SAAS;YA9BlBR,aAAa,CAACU,oBAAoB,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAE,CAAC,EACjET,gBAAgB,EAChBD,WAAW;EACX;;;EAGAE,YAAY,CAACS,OAAO,CAAC,CACnB;IAAEC,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAER,sBAAsB;IAAES,SAAS,EAAE;EAAM,CAAE,EAClE;IAAEF,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAEP;EAAa;EAC1C;EACA;EACA;EACA;EAAA,CACD,CAAC;AAAA;;;2EAiBOC,SAAS;IAAAQ,eA5ClBZ,YAAY,EACZC,gBAAgB,EAChBC,sBAAsB;IAAAW,4BAatBf,gBAAgB,EAChBD,WAAW;EAAA;AAAA","names":["BrowserModule","FormsModule","HttpClientModule","RouterModule","AppComponent","NavMenuComponent","SearchFlightsComponent","HomeComponent","AppModule","bootstrap","withServerTransition","appId","forRoot","path","component","pathMatch","declarations","imports"],"sourceRoot":"","sources":["/Users/bitstop/Projects/TestAngularASPProject/TestAngularASPProject/TestAngularASPProject/ClientApp/src/app/app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { SearchFlightsComponent } from './search-flights/search-flights.component';\nimport { HomeComponent } from './home/home.component';\n//import { CounterComponent } from './counter/counter.component';\n//import { FetchDataComponent } from './fetch-data/fetch-data.component';\n//import { MyComponent } from './my-component/my-component.component';\n\n/**\n * @NgModule decorator:\n * There are several fields that can be used to configure and customize\n * the behavior of a module. The fields in this decorator provide control over\n * services, components and other features used in this decorator.\n */\n@NgModule({\n  /**\n   * declarations\n   * Used to declare components, directives and pipes that belong to the module.\n   * These declarations make items available for use within the module.\n   */\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    SearchFlightsComponent,\n    //HomeComponent,\n    //CounterComponent,\n    //FetchDataComponent,\n    //MyComponent,\n  ],\n  /**\n   * imports\n   * Specifies other modules who's exported components, directives, or services\n   * are required by components in this module.\n   */\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    /**\n     * Route definitions for our Angular Client App.\n     */\n    RouterModule.forRoot([\n      { path: '', component: SearchFlightsComponent, pathMatch: 'full' },\n      { path: '/notes', component: HomeComponent },\n      //{ path: 'counter', component: CounterComponent },\n      //{ path: 'fetch-data', component: FetchDataComponent },\n      // my newly added route, it maps to component: MyComponent\n      //{ path: 'my-component', component: MyComponent }\n    ])\n  ],\n  /**\n   * providers\n   * Used to configure the dependency injection system with a list of services\n   * that the module should provide. These services are made available throughout\n   * the application.\n   */\n  providers: [],\n  /**\n   * bootstrap\n   * Field is used to specify the root components that should be bootstrapped when\n   * the module is loaded. The root component typically corresponds to the main\n   * component of the application.\n   */\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}